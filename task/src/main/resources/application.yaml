spring:
  application:
    name: task
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}?currentSchema=${POSTGRES_SCHEMA:public}&search_path==${POSTGRES_SCHEMA:public}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_SERVER}:${KAFKA_PORT}
    consumer:
      group-id: log-group
    producer:
      retries: 5
      properties:
        retry.backoff.ms: 1000
  security:
    oauth2:
      resourceserver:
        jwt:
          jws-algorithms: RS512
          issuer-uri: ${JWT_ISSUER_URI}
          jwk-set-uri: ${JWK_SET_URI}
  rabbitmq:
    host: ${RABBIT_HOST}
    port: ${RABBIT_PORT}

kafka-topic: log-message
rabbit:
  exchange: notification_exchange
  routing-key: email_notification_key
  queue-name: email_notification_queue

server:
  port: ${APPLICATION_PORT:8060}
  servlet:
    context-path: "/task"

logging:
  file:
    path: /var/log/task